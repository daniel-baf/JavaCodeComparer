[1mdiff --git a/JavaCodeAnlServer/src/main/Resources/Syntax.cup b/JavaCodeAnlServer/src/main/Resources/Syntax.cup[m
[1mindex 86bd5fc..31ea8fb 100644[m
[1m--- a/JavaCodeAnlServer/src/main/Resources/Syntax.cup[m
[1m+++ b/JavaCodeAnlServer/src/main/Resources/Syntax.cup[m
[36m@@ -2,10 +2,10 @@[m
 /***************************************/[m
 /********** USER CODE SECTION **********/[m
 /***************************************/[m
[31m-[m
 package Backend.Objects.Parsers;[m
[31m-import java_cup.runtime.*;[m
[32m+[m
 import Backend.Objects.Lexers.JavaCodeLexer;[m
[32m+[m[32mimport java_cup.runtime.*;[m
 import Utilities.Tree.JavaData;[m
 import java.util.ArrayList;[m
 import Utilities.Tree.Node;[m
[36m@@ -18,7 +18,6 @@[m [mparser code {:[m
 [m
   // constructor[m
   public JavaCodeParser(JavaCodeLexer lexer, String fileName) {[m
[31m-    super(lexer);[m
     actioner = new ParserActioner();[m
     this.fileName = fileName;[m
   }[m
[36m@@ -33,7 +32,7 @@[m [mparser code {:[m
   }[m
 [m
   public void syntax_error(Symbol cur_token) {[m
[31m-      System.out.println("Error sym: " + sym.terminalNames[cur_token.sym] + " L:" + cur_token.left + " C:" +  cur_token.right + " file: " + this.fileName);[m
[32m+[m[32m    // actioner.addError(cur_token.left, cur_token.right, cur_token.value.toString(), this.fileName);[m
   }[m
 [m
   public void unrecovered_syntax_error(Symbol cur_token) {[m
[1mdiff --git a/JavaCodeAnlServer/src/main/Resources/lexer.jflex b/JavaCodeAnlServer/src/main/Resources/lexer.jflex[m
[1mindex 9d757f5..2e0fd1c 100644[m
[1m--- a/JavaCodeAnlServer/src/main/Resources/lexer.jflex[m
[1m+++ b/JavaCodeAnlServer/src/main/Resources/lexer.jflex[m
[36m@@ -1,9 +1,12 @@[m
 /* SECTION 1: USER CODE */[m
 package Backend.Objects.Lexers;[m
[32m+[m
[32m+[m
 import java_cup.runtime.*;[m
[31m-import Backend.Objects.Parsers.sym;[m
 import java.util.ArrayList;[m
 import java.util.HashMap;[m
[32m+[m[32mimport Backend.Objects.Parsers.sym;[m
[32m+[m[32mimport Backend.Objects.AnalysisError;[m
 [m
 /* SECTION 2: CONFIG */[m
 %%[m
[36m@@ -35,6 +38,8 @@[m [mID=({LETT}({LETT}|{NUM}|"_")*)[m
     private final ArrayList<String> comments = new ArrayList<>();[m
     private int commentsCounter = 0;[m
     private final HashMap<String, Integer> commentsDeclTimes = new HashMap<>();[m
[32m+[m[32m    private final ArrayList<AnalysisError> errors = new ArrayList<>();[m
[32m+[m[32m    // private String filename = "";[m
 [m
     public void saveComment(String comment, boolean isLong) {[m
         if(isLong) {[m
[36m@@ -54,10 +59,13 @@[m [mID=({LETT}({LETT}|{NUM}|"_")*)[m
     }[m
 [m
     private void incCommentsCounter() {this.commentsCounter++;}[m
[32m+[m[32m    // public void setFilename(String filename){ this.filename = filename; }[m
 [m
     public ArrayList<String> getComments () { return this.comments; }[m
[32m+[m[32m    // public ArrayList<AnalysisError> getErrors() { return this.errors; }[m
     public int getCommentsCounter() { return this.commentsCounter; }[m
     public HashMap<String, Integer> getHashComments() { return this.commentsDeclTimes; }[m
[32m+[m[32m    public void addError() { /*errors.add(new AnalysisError(yyline + 1, yycolumn + 1, yytext(), this.filename)); */}[m
 %}[m
 [m
 [m
[36m@@ -148,4 +156,4 @@[m [mID=({LETT}({LETT}|{NUM}|"_")*)[m
 {ID}                {return new Symbol(sym.ID, yyline+1,yycolumn+1,yytext());}[m
 [m
 // UNKNOWN[m
[31m-[^]                 {/* unknown */ return new Symbol(sym.UNKNOWN, yyline+1, yycolumn+1, yytext()); }[m
\ No newline at end of file[m
[32m+[m[32m[^]                 {/* unknown */ addError(); return new Symbol(sym.UNKNOWN, yyline+1, yycolumn+1, yytext()); }[m
\ No newline at end of file[m
[1mdiff --git a/JavaCodeAnlServer/src/main/java/Backend/Objects/AnalysisError.java b/JavaCodeAnlServer/src/main/java/Backend/Objects/AnalysisError.java[m
[1mindex bb792f5..f910f8d 100644[m
[1m--- a/JavaCodeAnlServer/src/main/java/Backend/Objects/AnalysisError.java[m
[1m+++ b/JavaCodeAnlServer/src/main/java/Backend/Objects/AnalysisError.java[m
[36m@@ -5,10 +5,34 @@[m
  */[m
 package Backend.Objects;[m
 [m
[32m+[m[32mimport java.util.ArrayList;[m
[32m+[m
 /**[m
  *[m
  * @author jefemayoneso[m
  */[m
[31m-public class AnalyzisError {[m
[31m-    [m
[32m+[m[32mpublic class AnalysisError {[m
[32m+[m
[32m+[m[32m    private int line;[m
[32m+[m[32m    private int column;[m
[32m+[m[32m    private String lexeme;[m
[32m+[m[32m    private String file;[m
[32m+[m[32m    private ArrayList<String> expectedSymbols;[m
[32m+[m
[32m+[m[32m    public AnalysisError() {[m
[32m+[m[32m        this(-1, -1, null, null);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public AnalysisError(int line, int column, String lexeme, String file) {[m
[32m+[m[32m        this(line, column, lexeme, file, null);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public AnalysisError(int line, int column, String lexeme, String file, ArrayList<String> expectedSymbols) {[m
[32m+[m[32m        this.line = line;[m
[32m+[m[32m        this.column = column;[m
[32m+[m[32m        this.lexeme = lexeme;[m
[32m+[m[32m        this.file = file;[m
[32m+[m[32m        this.expectedSymbols = expectedSymbols;[m
[32m+[m[32m    }[m
[32m+[m
 }[m
[1mdiff --git a/JavaCodeAnlServer/src/main/java/Backend/Objects/JavaPjcts/ProjectAnalizer.java b/JavaCodeAnlServer/src/main/java/Backend/Objects/JavaPjcts/ProjectAnalizer.java[m
[1mindex 0fbf1ff..052123e 100644[m
[1m--- a/JavaCodeAnlServer/src/main/java/Backend/Objects/JavaPjcts/ProjectAnalizer.java[m
[1m+++ b/JavaCodeAnlServer/src/main/java/Backend/Objects/JavaPjcts/ProjectAnalizer.java[m
[36m@@ -65,6 +65,7 @@[m [mpublic class ProjectAnalizer {[m
     private void startAnalyzing(File file, ProjectDataSaver project) {[m
         try {[m
             this.lexer = new JavaCodeLexer(new StringReader(this.reader.readFile(file)));[m
[32m+[m[32m            // this.lexer.setFilename(file.getName());[m
             this.parser = new JavaCodeParser(this.lexer, file.getName());[m
             // sintactical analysis[m
             this.parser.parse();[m
[36m@@ -72,6 +73,7 @@[m [mpublic class ProjectAnalizer {[m
             this.parser.getActioner().getTree().getRoot().getData().setVariable(file.getName().toUpperCase());[m
         } catch (Exception e) {[m
             System.out.println("Error at project analizer: " + e.getMessage());[m
[32m+[m[32m            e.printStackTrace();[m
         } finally {[m
             saveDataToMasterTree(project);[m
         }[m
[36m@@ -93,7 +95,13 @@[m [mpublic class ProjectAnalizer {[m
         project.addTableHash(this.parser.getActioner().getVarsTable(), 1); // add variables counter table       [m
         project.addTableHash(this.parser.getActioner().getClassTable(), 2); // add variables counter table[m
         project.addTableHash(this.parser.getActioner().getMethodTable(), 3); // add variables counter table[m
[31m-        project.addTableHash(this.lexer.getHashComments(), 4);[m
[32m+[m[32m        project.addTableHash(this.lexer.getHashComments(), 4); // add comments variable counter[m
[32m+[m[32m        // add errors[m
[32m+[m[32m        //if (this.lexer.getErrors() != null) {[m
[32m+[m[32m        //    project.getErrors().addAll(this.lexer.getErrors());[m
[32m+[m[32m        //} else if (this.parser.getActioner().getErrors() != null) {[m
[32m+[m[32m        //    project.getErrors().addAll(this.parser.getActioner().getErrors());[m
[32m+[m[32m        //}[m
     }[m
 [m
     // GETTRES AND SETTERS[m
[1mdiff --git a/JavaCodeAnlServer/src/main/java/Backend/Objects/JavaPjcts/ProjectDataSaver.java b/JavaCodeAnlServer/src/main/java/Backend/Objects/JavaPjcts/ProjectDataSaver.java[m
[1mindex ebff2b0..1b54e23 100644[m
[1m--- a/JavaCodeAnlServer/src/main/java/Backend/Objects/JavaPjcts/ProjectDataSaver.java[m
[1m+++ b/JavaCodeAnlServer/src/main/java/Backend/Objects/JavaPjcts/ProjectDataSaver.java[m
[36m@@ -1,5 +1,6 @@[m
 package Backend.Objects.JavaPjcts;[m
 [m
[32m+[m[32mimport Backend.Objects.AnalysisError;[m
 import Utilities.Tree.JavaData;[m
 import java.util.ArrayList;[m
 [m
[36m@@ -21,6 +22,7 @@[m [mpublic class ProjectDataSaver {[m
     private HashMap<String, Integer> variablesTable;[m
     private HashMap<String, Integer> methodTable;[m
     private HashMap<String, Integer> commentsTable;[m
[32m+[m[32m    private ArrayList<AnalysisError> errors;[m
 [m
     // CONSTRUCTORS[m
     public ProjectDataSaver(String name) {[m
[36m@@ -36,6 +38,7 @@[m [mpublic class ProjectDataSaver {[m
         this.comments = comments;[m
         this.commentsCounter = comments == null ? 0 : comments.size();[m
         this.variablesTable = this.classesTable = this.methodTable = this.commentsTable = new HashMap<>();[m
[32m+[m[32m        this.errors = new ArrayList<>();[m
         // check tree is not empty[m
         this.tree.setRoot(this.tree.createNode(new JavaData("MASTER", name)));[m
     }[m
[36m@@ -171,4 +174,11 @@[m [mpublic class ProjectDataSaver {[m
         return this.comments;[m
     }[m
 [m
[32m+[m[32m    public ArrayList<AnalysisError> getErrors() {[m
[32m+[m[32m        return errors;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setErrors(ArrayList<AnalysisError> errors) {[m
[32m+[m[32m        this.errors = errors;[m
[32m+[m[32m    }[m
 }[m
[1mdiff --git a/JavaCodeAnlServer/src/main/java/Backend/Objects/Lexers/JavaCodeLexer.java b/JavaCodeAnlServer/src/main/java/Backend/Objects/Lexers/JavaCodeLexer.java[m
[1mindex 5617131..bcb280f 100644[m
[1m--- a/JavaCodeAnlServer/src/main/java/Backend/Objects/Lexers/JavaCodeLexer.java[m
[1m+++ b/JavaCodeAnlServer/src/main/java/Backend/Objects/Lexers/JavaCodeLexer.java[m
[36m@@ -2,10 +2,13 @@[m
 [m
 /* SECTION 1: USER CODE */[m
 package Backend.Objects.Lexers;[m
[32m+[m
[32m+[m
 import java_cup.runtime.*;[m
[31m-import Backend.Objects.Parsers.sym;[m
 import java.util.ArrayList;[m
 import java.util.HashMap;[m
[32m+[m[32mimport Backend.Objects.Parsers.sym;[m
[32m+[m[32mimport Backend.Objects.AnalysisError;[m
 [m
 /* SECTION 2: CONFIG */[m
 [m
[36m@@ -386,6 +389,8 @@[m [mpublic class JavaCodeLexer implements java_cup.runtime.Scanner {[m
     private final ArrayList<String> comments = new ArrayList<>();[m
     private int commentsCounter = 0;[m
     private final HashMap<String, Integer> commentsDeclTimes = new HashMap<>();[m
[32m+[m[32m    private final ArrayList<AnalysisError> errors = new ArrayList<>();[m
[32m+[m[32m    // private String filename = "";[m
 [m
     public void saveComment(String comment, boolean isLong) {[m
         if(isLong) {[m
[36m@@ -405,10 +410,13 @@[m [mpublic class JavaCodeLexer implements java_cup.runtime.Scanner {[m
     }[m
 [m
     private void incCommentsCounter() {this.commentsCounter++;}[m
[32m+[m[32m    // public void setFilename(String filename){ this.filename = filename; }[m
 [m
     public ArrayList<String> getComments () { return this.comments; }[m
[32m+[m[32m    // public ArrayList<AnalysisError> getErrors() { return this.errors; }[m
     public int getCommentsCounter() { return this.commentsCounter; }[m
     public HashMap<String, Integer> getHashComments() { return this.commentsDeclTimes; }[m
[32m+[m[32m    public void addError() { /*errors.add(new AnalysisError(yyline + 1, yycolumn + 1, yytext(), this.filename)); */}[m
 [m
 [m
   /**[m
[36m@@ -802,7 +810,7 @@[m [mpublic class JavaCodeLexer implements java_cup.runtime.Scanner {[m
             // fall through[m
           case 64: break;[m
           case 6: [m
[31m-            { /* unknown */ return new Symbol(sym.UNKNOWN, yyline+1, yycolumn+1, yytext());[m
[32m+[m[32m            { /* unknown */ addError(); return new Symbol(sym.UNKNOWN, yyline+1, yycolumn+1, yytext());[m
             } [m
             // fall through[m
           case 65: break;[m
[1mdiff --git a/JavaCodeAnlServer/src/main/java/Backend/Objects/Parsers/JavaCodeParser.java b/JavaCodeAnlServer/src/main/java/Backend/Objects/Parsers/JavaCodeParser.java[m
[1mindex b99a652..93fdd1a 100644[m
[1m--- a/JavaCodeAnlServer/src/main/java/Backend/Objects/Parsers/JavaCodeParser.java[m
[1m+++ b/JavaCodeAnlServer/src/main/java/Backend/Objects/Parsers/JavaCodeParser.java[m
[36m@@ -5,8 +5,8 @@[m
 [m
 package Backend.Objects.Parsers;[m
 [m
[31m-import java_cup.runtime.*;[m
 import Backend.Objects.Lexers.JavaCodeLexer;[m
[32m+[m[32mimport java_cup.runtime.*;[m
 import Utilities.Tree.JavaData;[m
 import java.util.ArrayList;[m
 import Utilities.Tree.Node;[m
[36m@@ -562,7 +562,6 @@[m [mpublic class JavaCodeParser extends java_cup.runtime.lr_parser {[m
 [m
   // constructor[m
   public JavaCodeParser(JavaCodeLexer lexer, String fileName) {[m
[31m-    super(lexer);[m
     actioner = new ParserActioner();[m
     this.fileName = fileName;[m
   }[m
[36m@@ -577,7 +576,7 @@[m [mpublic class JavaCodeParser extends java_cup.runtime.lr_parser {[m
   }[m
 [m
   public void syntax_error(Symbol cur_token) {[m
[31m-      System.out.println("Error sym: " + sym.terminalNames[cur_token.sym] + " L:" + cur_token.left + " C:" +  cur_token.right + " file: " + this.fileName);[m
[32m+[m[32m    // actioner.addError(cur_token.left, cur_token.right, cur_token.value.toString(), this.fileName);[m
   }[m
 [m
   public void unrecovered_syntax_error(Symbol cur_token) {[m
[1mdiff --git a/JavaCodeAnlServer/src/main/java/Backend/Objects/Parsers/ParserActioner.java b/JavaCodeAnlServer/src/main/java/Backend/Objects/Parsers/ParserActioner.java[m
[1mindex 8f057b1..111d2e9 100644[m
[1m--- a/JavaCodeAnlServer/src/main/java/Backend/Objects/Parsers/ParserActioner.java[m
[1m+++ b/JavaCodeAnlServer/src/main/java/Backend/Objects/Parsers/ParserActioner.java[m
[36m@@ -1,5 +1,6 @@[m
 package Backend.Objects.Parsers;[m
 [m
[32m+[m[32mimport Backend.Objects.AnalysisError;[m
 import Utilities.Tree.JavaData;[m
 import Utilities.Tree.Node;[m
 import Utilities.Tree.DerivationTree;[m
[36m@@ -17,10 +18,11 @@[m [mimport java.util.HashMap;[m
  */[m
 public class ParserActioner {[m
 [m
[31m-    private final DerivationTree<JavaData> tree;[m
     private int varsDeclared;[m
     private int classDeclared;[m
     private int methodsDeclared;[m
[32m+[m[32m    private ArrayList<AnalysisError> errors;[m
[32m+[m[32m    private final DerivationTree<JavaData> tree;[m
     private final HashMap<String, Integer> varsTable;[m
     private final HashMap<String, Integer> classTable;[m
     private final HashMap<String, Integer> methodTable;[m
[36m@@ -30,6 +32,7 @@[m [mpublic class ParserActioner {[m
         this.varsTable = new HashMap<>();[m
         this.classTable = new HashMap<>();[m
         this.methodTable = new HashMap<>();[m
[32m+[m[32m        this.errors = new ArrayList<>();[m
     }[m
 [m
     /**[m
[36m@@ -206,4 +209,12 @@[m [mpublic class ParserActioner {[m
         return methodTable;[m
     }[m
 [m
[32m+[m[32m    public void addError(int line, int column, String value, String filename) {[m
[32m+[m[32m        this.errors.add(new AnalysisError(line, column, value, filename));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public ArrayList<AnalysisError> getErrors() {[m
[32m+[m[32m        return errors;[m
[32m+[m[32m    }[m
[32m+[m
 }[m
