/**************************************************/
/************** SECTION 1: USER CODE **************/
/**************************************************/

package Backend.Objects.Parsers;

import Backend.Objects.Lexers.ReportLexer;
import java_cup.runtime.*;

/**************************************************/
/************ SECTION 2: USER METHODS *************/
/**************************************************/

parser code {:

    public ReportParser(ReportLexer lexer) {
        super(lexer);
    }

    // error methods
    public void report_error(String message, Object info) {
        System.out.println("public void report_error");
    }
    
    public void report_fatal_error(String message, Object info) {
        System.out.println("public void report_fatal_error");
    }

    public void syntax_error(Symbol cur_token) {
        System.out.println(String.format("El error es el simbolo: %1$s, en posicion: %2$d, %3$d", sym.terminalNames[cur_token.sym], cur_token.left, cur_token.right));
    }

    public void unrecovered_syntax_error(Symbol cur_token) {
        System.out.println("unrecovered sintax error");
    }   

:}

/**************************************************/
/************ SECTION 3: LEXICAL RULES ************/
/**************************************************/

// from lexer
terminal HTML_C, HTML_O, H1_C, H1_O, H2_C, H2_O, TABLE_C, TABLE_O, FOR_C, FOR_O, TR_C, TR_O, TD_C, TD_O, TH_C, TH_O,
  BR, UNKNOWN, ID, DIV, NUMBER, DOT, BRACK_C, BRACK_O, SEMICOLON, COLON, EQUALS, PLUS, LESS, MULT, PAR_C, PAR_O, STRING, 
  DOLAR, TYPE, SCORE, UNTIL, STRING_TYPE, NAME, CLASSES, RESULT_T, METHODS, FUNCTION, INTEGER, ITERATOR, VARIABLES, PARAMETERS,
  COMMENTS, TEXT, LT;

// master
non terminal main, html_section, html_content, html_declarations, html_declarations_global, table_declaration, 
    for_declaration, h1_declaration, h2_declaration, br_declaration, data_set;
// extra
non terminal for_open, element, id_vals;
// RESULT object
non terminal result_object, result_object_attrs, result_data_classes, result_data_methods, result_data_variables,
    result_data_comments, result_data_variables_children, result_data_methods_children;
start with main;

main::=
    html_section
;

html_section::=
      HTML_O HTML_C
    | HTML_O html_content HTML_C
;

html_content::=
      html_declarations
    | html_content html_declarations
;

html_declarations::=
      html_declarations_global
    | table_declaration
    | for_declaration
;

html_declarations_global::=
      h1_declaration
    | h2_declaration
    | br_declaration
;

h1_declaration::=
      H1_O H1_C
    | H1_O data_set H1_C
;

h2_declaration::=
      H2_O H2_C
    | H2_O data_set H2_C
;

br_declaration::=BR;

table_declaration::=
      TABLE_O TABLE_C
    | TABLE_O data_set TABLE_C
;

for_declaration::=
      for_open FOR_C
    | for_open html_content FOR_C
;

for_open::=
    FOR_O ITERATOR COLON id_vals UNTIL COLON element SEMICOLON LT
;

data_set::=
      DOLAR PAR_O id_vals PAR_C DOLAR
    | element
;

element::=
      NUMBER
    | id_vals
;

id_vals::=
      ID
    | result_object
;

result_object::=
      RESULT_T
    | RESULT_T DOT result_object_attrs
;

result_object_attrs::=
      SCORE
    | result_data_classes
    | result_data_variables
    | result_data_methods
    | result_data_comments
;

result_data_classes::=
      CLASSES
    | CLASSES BRACK_O NUMBER BRACK_C
    | CLASSES BRACK_O NUMBER BRACK_C DOT NAME
;

result_data_variables::=
      VARIABLES
    | VARIABLES BRACK_O NUMBER BRACK_C
    | VARIABLES BRACK_O NUMBER BRACK_C DOT result_data_variables_children
;

result_data_methods::=
      METHODS
    | METHODS BRACK_O NUMBER BRACK_C
    | METHODS BRACK_O NUMBER BRACK_C DOT result_data_methods_children
;

result_data_comments::=
      COMMENTS
    | COMMENTS BRACK_O NUMBER BRACK_C
    | COMMENTS BRACK_O NUMBER BRACK_C DOT TEXT
;

result_data_variables_children::=
      NAME
    | TYPE
    | FUNCTION
;

result_data_methods_children::=
      NAME
    | TYPE
    | PARAMETERS
;